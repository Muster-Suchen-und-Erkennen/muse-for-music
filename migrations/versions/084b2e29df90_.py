"""empty message

Revision ID: 084b2e29df90
Revises: 494a304bb471
Create Date: 2022-02-23 09:55:51.866407

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '084b2e29df90'
down_revision = '494a304bb471'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('satzart_allgemein_to_satz',
    sa.Column('satz_id', sa.Integer(), nullable=False),
    sa.Column('satzart_allgemein_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['satz_id'], ['satz.id'], name=op.f('fk_satzart_allgemein_to_satz_satz_id_satz')),
    sa.ForeignKeyConstraint(['satzart_allgemein_id'], ['satzart_allgemein.id'], name=op.f('fk_satzart_allgemein_to_satz_satzart_allgemein_id_satzart_allgemein')),
    sa.PrimaryKeyConstraint('satz_id', 'satzart_allgemein_id', name=op.f('pk_satzart_allgemein_to_satz'))
    )
    op.create_table('satzart_speziell_to_satz',
    sa.Column('satz_id', sa.Integer(), nullable=False),
    sa.Column('satzart_speziell_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['satz_id'], ['satz.id'], name=op.f('fk_satzart_speziell_to_satz_satz_id_satz')),
    sa.ForeignKeyConstraint(['satzart_speziell_id'], ['satzart_speziell.id'], name=op.f('fk_satzart_speziell_to_satz_satzart_speziell_id_satzart_speziell')),
    sa.PrimaryKeyConstraint('satz_id', 'satzart_speziell_id', name=op.f('pk_satzart_speziell_to_satz'))
    )
    op.create_table('harmonische_funktion_to_harmonics',
    sa.Column('harmonics_id', sa.Integer(), nullable=False),
    sa.Column('harmonic_function_modulation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['harmonic_function_modulation_id'], ['harmonische_funktion_verwandschaft.id'], name=op.f('fk_harmonische_funktion_to_harmonics_harmonic_function_modulation_id_harmonische_funktion_verwandschaft')),
    sa.ForeignKeyConstraint(['harmonics_id'], ['harmonics.id'], name=op.f('fk_harmonische_funktion_to_harmonics_harmonics_id_harmonics')),
    sa.PrimaryKeyConstraint('harmonics_id', 'harmonic_function_modulation_id', name=op.f('pk_harmonische_funktion_to_harmonics'))
    )
    op.create_table('auftreten_satz_to_part',
    sa.Column('part_id', sa.Integer(), nullable=False),
    sa.Column('auftreten_satz_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['auftreten_satz_id'], ['auftreten_satz.id'], name='fk_auftreten_satz_to_part_auftreten_satz_id'),
    sa.ForeignKeyConstraint(['part_id'], ['part.id'], name=op.f('fk_auftreten_satz_to_part_part_id_part')),
    sa.PrimaryKeyConstraint('part_id', 'auftreten_satz_id', name=op.f('pk_auftreten_satz_to_part'))
    )
    op.create_table('intervallik_to_voice',
    sa.Column('voice_id', sa.Integer(), nullable=False),
    sa.Column('intervallik_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['intervallik_id'], ['intervallik.id'], name=op.f('fk_intervallik_to_voice_intervallik_id_intervallik')),
    sa.ForeignKeyConstraint(['voice_id'], ['voice.id'], name=op.f('fk_intervallik_to_voice_voice_id_voice')),
    sa.PrimaryKeyConstraint('voice_id', 'intervallik_id', name=op.f('pk_intervallik_to_voice'))
    )
    with op.batch_alter_table('harmonics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('harmonic_analyse', sa.Text(), nullable=True))
        batch_op.drop_constraint('harmonics_ibfk_4', type_='foreignkey')
        batch_op.drop_column('harmonic_function_modulation_id')

    with op.batch_alter_table('part', schema=None) as batch_op:
        batch_op.drop_constraint('part_ibfk_7', type_='foreignkey')
        batch_op.drop_column('occurence_in_movement_id')

    with op.batch_alter_table('satz', schema=None) as batch_op:
        batch_op.drop_constraint('satz_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('satz_ibfk_1', type_='foreignkey')
        batch_op.drop_column('satzart_allgemein_id')
        batch_op.drop_column('satzart_speziell_id')

    with op.batch_alter_table('sub_part', schema=None) as batch_op:
        batch_op.drop_constraint('fk_sub_part_ambitus_id_ambitus_group', type_='foreignkey')
        batch_op.drop_column('ambitus_id')

    with op.batch_alter_table('voice', schema=None) as batch_op:
        batch_op.add_column(sa.Column('measure_start_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('measure_end_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('ambitus_id', sa.Integer(), nullable=True))
        batch_op.drop_constraint('voice_ibfk_4', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_voice_measure_start_id_measure'), 'measure', ['measure_start_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_voice_ambitus_id_ambitus_group'), 'ambitus_group', ['ambitus_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_voice_measure_end_id_measure'), 'measure', ['measure_end_id'], ['id'])
        batch_op.drop_column('intervallik_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('voice', schema=None) as batch_op:
        batch_op.add_column(sa.Column('intervallik_id', sa.INTEGER(), nullable=True))
        batch_op.drop_constraint(batch_op.f('fk_voice_measure_end_id_measure'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_voice_ambitus_id_ambitus_group'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_voice_measure_start_id_measure'), type_='foreignkey')
        batch_op.create_foreign_key('voice_ibfk_4', 'intervallik', ['intervallik_id'], ['id'])
        batch_op.drop_column('ambitus_id')
        batch_op.drop_column('measure_end_id')
        batch_op.drop_column('measure_start_id')

    with op.batch_alter_table('sub_part', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ambitus_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key('fk_sub_part_ambitus_id_ambitus_group', 'ambitus_group', ['ambitus_id'], ['id'])

    with op.batch_alter_table('satz', schema=None) as batch_op:
        batch_op.add_column(sa.Column('satzart_speziell_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('satzart_allgemein_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key('satz_ibfk_1', 'satzart_allgemein', ['satzart_allgemein_id'], ['id'])
        batch_op.create_foreign_key('satz_ibfk_2', 'satzart_speziell', ['satzart_speziell_id'], ['id'])

    with op.batch_alter_table('part', schema=None) as batch_op:
        batch_op.add_column(sa.Column('occurence_in_movement_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key('part_ibfk_7', 'auftreten_satz', ['occurence_in_movement_id'], ['id'])

    with op.batch_alter_table('harmonics', schema=None) as batch_op:
        batch_op.add_column(sa.Column('harmonic_function_modulation_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key('harmonics_ibfk_4', 'harmonische_funktion_verwandschaft', ['harmonic_function_modulation_id'], ['id'])
        batch_op.drop_column('harmonic_analyse')

    op.drop_table('intervallik_to_voice')
    op.drop_table('auftreten_satz_to_part')
    op.drop_table('harmonische_funktion_to_harmonics')
    op.drop_table('satzart_speziell_to_satz')
    op.drop_table('satzart_allgemein_to_satz')
    # ### end Alembic commands ###
